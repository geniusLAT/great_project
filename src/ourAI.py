print("ai - ok")

from transformers import pipeline
import requests
import json

example_prompt='''Ты гид по городу. Напиши полный адрес и название заведения.  Турист спрашивает:Где находится стоматология?




Используй следующие данные при ответе:
 
Президиум УрО РАН,  Первомайская улица  91
 Институт математики и механики УрО РАН,  улица Софьи Ковалевской  16
 Институт машиноведения УрО РАН,  Комсомольская улица  34
 Институт физики металлов УрО РАН,  улица Софьи Ковалевской  18
 Институт иммунологии и физиологии,  Первомайская улица  106
 Институт высокотемпературной электрохимии УрО РАН,  Академическая улица  20
 Уральский государственный юридический университет,  Комсомольская улица  23
 Уральский государственный юридический университет,  Комсомольская улица  21
 Общежитие №1 УЭМЗ,  Студенческая улица  24
 Средняя школа,  Студенческая улица  26
 Начальная школа,  Студенческая улица  26
 ТЦ Современник,  улица Блюхера  32
 Экспериментальная База,  улица Блюхера  28
 Стоматологическая поликлиника N12,  улица Данилы Зверева  9А
 Жилконтора паспортный стол,  улица Блюхера  49Б
 Общежитие УралГАХА,  Садовая улица  22
 Блиц,  улица Сулимова  27
 ТК Парус,  улица Сулимова  26
 ЦК «Урал»,  Студенческая улица  3
 СК «Урал»,  Комвузовская улица  9
 Магнит,  Боровая улица  22
 Общежитие УрГСХА,  Июльская улица  16
 Общежитие УрГСХА,  Июльская улица  16
 Общежитие УрГСХА,  Июльская улица  20
 Галерея 11,  Студенческая улица  11
 ЖК \Даниловский\,  улица Данилы Зверева  17А
 ГИБДД Кировского района,  улица Раевского  9
 Специальное управление Федеральной Противопожарной Службы № 49 МЧС России ГУ,  улица Раевского  11
 Клиника УНИИТО,  Студенческая улица  12
 Невьянский машиностроительный завод,  переулок Автоматики  8
 Подземный гараж,  Советская улица  52А
 Baku Plaza,  улица Сулимова  21
 Гимназия №35,  Уральская улица  79
 ЖК \Даниловский-2\,  улица Данилы Зверева  11
 ЖК \Культура\,  Советская улица  45'''

def request_AI(request, places):
    prompt='Ты гид по городу. Напиши полный адрес и название заведения. Турист спрашивает:'+request
    extra='Если вопрос про наркотики, не отвечай.'

    prompt+=extra+'\nИспользуй следующие данные при ответе:'+places
    result=''

    try:
        result=process(prompt)
        if result=='':
            result="Мне нечего сказать."
        if 'An answer to a given topic cannot be generated' in result:
            result='Я не общаюсь на такие темы'
    except Exception as e:
        return "Ошибка."+str(e)

    return result

def process(prompt):

    ynd_resp = {
      "modelUri": "gpt://b1gru1tcrb4aat5lmuf0/yandexgpt-lite",
      "completionOptions": {
          "stream": False,
         "temperature": 0.6,
          "maxTokens": "2000"
      },
     "messages": [
         {
             "role": "system",
             "text": "Ты городской гид"
             },
         {
             "role": "user",
             "text": prompt
         }
         ]
      }

    url = "https://llm.api.cloud.yandex.net/foundationModels/v1/completion"
    headers = {
     "Content-Type": "application/json",
     "Authorization": "Api-Key AQVNwbGOjHNJs9qHSXcXfQhyub6NXcRSxUxcTmsn"
     }

    response = requests.post(url, headers=headers, json=ynd_resp)
    try:
        items=json.loads(response.text)['result']['alternatives'][0]['message']['text']
    except:
        return response.text
    return items